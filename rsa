#!/usr/bin/python3

import sys
import math

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    x = 2
    y = 2
    d = 1
    f = lambda x: (x**2 + 1) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False
    return True

def factorize_rsa(n):
    factors = []
    while not is_prime(n):
        factor = pollards_rho(n)
        factors.append(factor)
        n //= factor
    factors.append(n)
    return factors

def main():
    if len(sys.argv) != 2:
        print("Usage: {} <file>".format(sys.argv[0]))
        sys.exit(1)

    input_file = sys.argv[1]

    with open(input_file, 'r') as file:
        for line in file:
            n = int(line.strip())
            factors = factorize_rsa(n)
            print("{}={}".format(n, "*".join(map(str, factors))))

if __name__ == "__main__":
    main()
